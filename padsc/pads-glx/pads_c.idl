/***********************************************************************
*                                                                      *
*              This software is part of the pads package               *
*           Copyright (c) 2005-2007 AT&T Knowledge Ventures            *
*                      and is licensed under the                       *
*                        Common Public License                         *
*                      by AT&T Knowledge Ventures                      *
*                                                                      *
*                A copy of the License is available at                 *
*                    www.padsproj.org/License.html                     *
*                                                                      *
*  This program contains certain software code or other information    *
*  ("AT&T Software") proprietary to AT&T Corp. ("AT&T").  The AT&T     *
*  Software is provided to you "AS IS". YOU ASSUME TOTAL RESPONSIBILITY*
*  AND RISK FOR USE OF THE AT&T SOFTWARE. AT&T DOES NOT MAKE, AND      *
*  EXPRESSLY DISCLAIMS, ANY EXPRESS OR IMPLIED WARRANTIES OF ANY KIND  *
*  WHATSOEVER, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF*
*  MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, WARRANTIES OF  *
*  TITLE OR NON-INFRINGEMENT.  (c) AT&T Corp.  All rights              *
*  reserved.  AT&T is a registered trademark of AT&T Corp.             *
*                                                                      *
*                   Network Services Research Center                   *
*                          AT&T Labs Research                          *
*                           Florham Park NJ                            *
*                                                                      *
*                Mary Fernandez <mff@research.att.com>                 *
*                 Robert Gruber <bob.gruber@gmail.com>                 *
*            Yitzhak Mandelbaum <yitzhakm@cs.princeton.edu>            *
*              Kathleen Fisher <kfisher@research.att.com>              *
*                                                                      *
***********************************************************************/
[pointer_default(ptr)] 

interface Test { 
  typedef [mltype("Nodeid.int64_pair")] struct{
    __int64 gId; 
    __int64 mId;
  } padsNID;
  typedef unsigned long childIndex; 
  typedef [abstract,finalize(free_node)] void * nodeRep; 
  typedef [mltype("nodeRep option"), c2ml(c2ml_nodeRepOpt), ml2c(ml2c_nodeRepOpt)] nodeRep nodeRepOpt;
  typedef [mltype("Physical_value.item"), c2ml(c2ml_atomicValue), ml2c(ml2c_atomicValue)] long *cAtomicValue; 
  /*  typedef [mltype("Datatypes_atomic.atomicValue"), c2ml(c2ml_atomicValue), ml2c(ml2c_atomicValue)] long *cAtomicValue;  */
  typedef [null_terminated] nodeRep nodeRepArray[]; 

  /* Need finalize(final_fn) attribute; final_fn is called when
     the Caml GC determines that the nodeRep is no longer accessible. */

  /* Might need compare(compare-fn) attribute; compare-fn is called to 
     compare to elements of the given type. */

  /* Might need errorcheck(error_fn) attribute; error_fn is called
     when a nodeRep is returned from C to Caml; can check an error
     condition and raise an exception. */

  [string] const char *name([in] nodeRep n);
  [string] const char *kind([in] nodeRep n);

  /*
  nodeRepArray children([in] nodeRep n);
  */

  nodeRepOpt kth_child([in] nodeRep n, [in] childIndex idx);
  nodeRepOpt kth_child_named([in] nodeRep n, [in] childIndex idx, [in,string] const char *name);
  padsNID get_id([in] nodeRep n);
  nodeRep parent ([in] nodeRep n);
  cAtomicValue typed_value([in] nodeRep x); 

  /*  [string] char *typed_value([in] nodeRep x); */
}
